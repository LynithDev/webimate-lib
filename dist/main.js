(()=>{"use strict";const e=(e,t)=>parseInt(e.split(t)[1])||0,t=t=>e(t,"delay="),a=t=>e(t,"queue="),s=[],r=new IntersectionObserver((e=>{e.sort(((e,t)=>a(e.target.className)-a(t.target.className))),console.log(e.map((e=>a(e.target.className))).join("\n"));let l=0;e.forEach(((o,n)=>{if(o.isIntersecting){if(o.target.className.indexOf("queue")>-1){s.push([(i=window.getComputedStyle(o.target).getPropertyValue("transition-duration").split(",")[0],i.indexOf("ms")>-1?parseFloat(i.replace("ms","")):1e3*parseFloat(i.replace("s",""))),o.target]);const r=null!=e[n-1]&&a(o.target.className)==a(e[n-1].target.className);l=r?l:l+1;const c=t(o.target.className)+t(o.target.parentElement.className);return void setTimeout((()=>{o.target.classList.add("visible")}),s[l-1][0]*l-s[l-1][0]+c*(l-1))}r.unobserve(o.target),o.target.classList.add("visible")}var i}))}));document.querySelectorAll(".animate").forEach((e=>{r.observe(e)})),window.webimate={getObserver:()=>r,getQueue:()=>s,getElementsByAnimation:e=>Array.prototype.slice.call(document.querySelectorAll(`.animation.${e}`)),observe:(...e)=>e.forEach((e=>r.observe(e))),unobserve:(...e)=>e.forEach((e=>r.unobserve(e)))}})();
//# sourceMappingURL=https://cdn.jsdelivr.net/gh/LynithDev/webimate-lib/dist/main.js.map
